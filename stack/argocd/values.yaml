argo-cd:
  configs:
    cm:
      # Patch for supporting traefik ingress health check
      resource.customizations: |
        networking.k8s.io/Ingress:
          health.lua: |
            hs = {}
            hs.status = "Healthy"
            return hs
      # Path to ignore Digital Ocean cilium resources
      resource.exclusions: |
        - apiGroups:
          - cilium.io
          kinds:
          - CiliumIdentity
          clusters:
          - "*"
      # Authentik
      url: https://argocd.alexlebens.dev
      dex.config: |
        connectors:
        - config:
            issuer: https://authentik.alexlebens.dev/application/o/argocd/
            clientID: 8svkyvh0ochInJgMIaFjyUMlF4eDe2xgKKeOM91g
            clientSecret: $dex.authentik.clientSecret
            redirectURI: http://localhost:8085/auth/callback
            insecureEnableGroups: true
            scopes:
              - openid
              - profile
              - email
          name: authentik
          type: oidc
          id: authentik
    rbac:
      policy.csv: |
        g, ArgoCD Admins, role:admin
  server:
    extraArgs:
      - --insecure
    config:
      repositories: |
        - type: helm
          name: argo-cd
          url: 'https://argoproj.github.io/argo-helm'
      statusbadge.enabled: "true"
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        cert-manager.io/cluster-issuer: letsencrypt-issuer
      hosts:
        - &host argocd.alexlebens.dev
      tls:
        - secretName: argocd-secret-tls
          hosts:
            - *host
    metrics: &metrics
      enabled: true
      serviceMonitor:
        enabled: true
  dex:
    enabled: true
  controller:
    metrics: *metrics
  repoServer:
    metrics: *metrics
  redis:
    metrics: *metrics
